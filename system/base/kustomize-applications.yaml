---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: kustomize-applications
  namespace: argocd
  annotations:
    app.kubernetes.io/component: ApplicationSet
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/name: argocd
    app.kubernetes.io/part-of: argocd
    argocd.argoproj.io/sync-wave: "1"
spec:
  goTemplate: true

  ## Add a strategy that will only sync the resources that have changed
  strategy:
    type: RollingSync
    rollingSync:
      steps:
        - matchExpressions:
            - key: phase
              operator: In
              values:
                - primary
        - matchExpressions:
            - key: phase
              operator: In
              values:
                - secondary
        - matchExpressions:
            - key: phase
              operator: NotIn
              values:
                - primary
                - secondary

  # Generate applications from the shared services repository
  generators:
    - git:
        repoURL: https://github.com/gambol99/eks-services.git
        revision: HEAD
        files:
          - path: "applications/**/grn.yaml"
        values:
          environment: grn
          repository: https://github.com/gambol99/eks-services.git
          revision: HEAD
      ## Filter on only those files with the correct values
      selector:
        matchExpressions:
          - key: kustomize.revision
            operator: Exists

  ## Sync Policy for the ApplicationSet
  syncPolicy:
    # Prevents ApplicationSet controller from modifying Applications. Delete is allowed.
    applicationsSync: create-delete
    # Prevent an Application's child resources from being deleted, when the parent Application is deleted
    # preserveResourcesOnDeletion: true

  ## Template out an application for each of the tenant applications
  template:
    metadata:
      name: "applications-{{ .path.basenameNormalized }}"
      namespace: argocd
      labels:
        app.kubernetes.io/name: argocd
        app.kubernetes.io/managed-by: argocd
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/environment: "{{ .values.environment }}"
        app.kubernetes.io/type: kustomize
        phase: '{{ default "tertiary" .sync.phase }}'

    spec:
      project: applications
      source:
        repoURL: "{{ default .values.repository .kustomize.repository }}"
        path: "{{ .path.path }}/overlays/{{ .values.environment }}"
        kustomize: {}

      ## Destination is the cluster to deploy to
      destination:
        server: https://kubernetes.default.svc
        ## /applications/[1]/DIRECTORY/FILE.yaml
        namespace: "{{ index .path.segments 1 }}"

      ## Sync policy for the application
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
        # Use server-side apply for better efficiency and interop
        # between controllers making partial changes to manifests.
        # Also enable apply out of sync only rather than trying to
        # apply all resources in the application.
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
          - ApplyOutOfSyncOnly=true

  ## If a kustomize.repository is defines we use the environment as the targetRevision. Its
  ## the responsibility of the repository to control the floating revisions.
  templatePatch: |
    {{ if .kustomize.repository }}
    spec:
      source:
        targetRevision: "{{ get .kustomize.environments .values.environment }}"
    {{ else }}
    spec:
      source:
        targetRevision: "{{ .kustomize.revision }}"
    {{ end }}

---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: tenant-namespace
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  goTemplate: true

  ## Add a strategy permiting us to control the ordering of resources
  ## by using labelling.
  strategy:
    type: RollingSync
    rollingSync:
      steps:
        - matchExpressions:
            - key: phase
              operator: In
              values:
                - primary
        - matchExpressions:
            - key: phase
              operator: In
              values:
                - secondary
        - matchExpressions:
            - key: phase
              operator: NotIn
              values:
                - primary
                - secondary

  # Generate applications from the shared services repository
  generators:
    - git:
        repoURL: https://github.com/gambol99/eks-services.git
        revision: HEAD
        files:
          - path: "applications/**/grn.yaml"
          - path: "applications/**/yel.yaml"
          - path: "applications/**/kustomize.yaml"
          - path: "platform/**/grn.yaml"
          - path: "platform/**/yel.yaml"
          - path: "platform/**/kustomize.yaml"
        values:
          helm_chart: tenant-namespace
          helm_url: https://gambol99.github.io/helm-tenant-namespace
          helm_version: 0.1.3
          repository: https://github.com/gambol99/eks-services.git

  ## Sync Policy for the ApplicationSet
  syncPolicy:
    # Prevents ApplicationSet controller from modifying Applications. Delete is allowed.
    applicationsSync: create-delete
    # Prevent an Application's child resources from being deleted, when the parent Application is deleted
    # preserveResourcesOnDeletion: true

  ## Template out an application for each of the tenant applications
  template:
    metadata:
      name: "namespace-{{ .path.basenameNormalized }}"
      namespace: argocd
      labels:
        app.kubernetes.io/name: argocd
        app.kubernetes.io/managed-by: argocd
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/environment: '{{ trimSuffix ".yaml" .path.filename }}'
        app.kubernetes.io/type: helm
        phase: primary

    spec:
      project: platform
      source:
        repoURL: "{{ .values.helm_url }}"
        targetRevision: "{{ .values.helm_version }}"
        path: "charts/{{ .values.helm_chart }}"
        helm:
          values: |
            namespace: "{{ index .path.segments 1 }}"

      ## Destination is the cluster to deploy to
      destination:
        server: https://kubernetes.default.svc
        ## /applications/[1]/DIRECTORY/FILE.yaml
        namespace: "{{ index .path.segments 1 }}"

      ## Sync policy for the application
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
        retry:
          backoff:
            duration: '{{ default "180s" .sync.retryBackoff }}'
            maxDuration: '{{ default "5m" .sync.retryMaxDuration }}'
        # Use server-side apply for better efficiency and interop
        # between controllers making partial changes to manifests.
        # Also enable apply out of sync only rather than trying to
        # apply all resources in the application.
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
          - ApplyOutOfSyncOnly=true
